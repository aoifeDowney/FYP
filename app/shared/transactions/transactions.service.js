"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var Kinvey = require("kinvey-nativescript-sdk");
var TransactionsService = /** @class */ (function () {
    function TransactionsService(datePipe) {
        this.datePipe = datePipe;
        this.activeUser = Kinvey.User.getActiveUser();
        this.userData = Kinvey.User.getActiveUser().data;
        this.dataStore = Kinvey.DataStore.collection("Transactions");
    }
    TransactionsService.prototype.save = function (task) {
        return this.dataStore.save(task);
    };
    TransactionsService.prototype.get = function () {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        var thirdQuery = new Kinvey.Query();
        var fourthQuery = new Kinvey.Query();
        // Sort by descending “entity created time” to put new items on top.
        query.descending("_kmd.ect");
        secondQuery.equalTo('complete', true);
        thirdQuery.equalTo("boughtBy", this.activeUser.username);
        fourthQuery.equalTo('houseName', this.userData["household"]);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery).and(fourthQuery));
    };
    TransactionsService.prototype.getHouseShopPrice = function () {
        var query = new Kinvey.Query();
        query.equalTo('type', 'House Shop');
        return this.dataStore.find(query);
    };
    TransactionsService.prototype.getItemBoughtDate = function () {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        query.equalTo('type', 'House Shop');
        secondQuery.equalTo('houseName', this.userData["household"]);
        return this.dataStore.find(query.and(secondQuery));
    };
    TransactionsService.prototype.getRent = function () {
        var query = new Kinvey.Query();
        query.equalTo('type', 'Rent');
        var secondQuery = new Kinvey.Query();
        secondQuery.equalTo('complete', true);
        var thirdQuery = new Kinvey.Query();
        thirdQuery.equalTo('houseName', this.userData["household"]);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery));
    };
    TransactionsService.prototype.getRentForUser = function () {
        var query = new Kinvey.Query();
        query.equalTo('type', 'Rent');
        var secondQuery = new Kinvey.Query();
        secondQuery.equalTo('complete', false);
        var thirdQuery = new Kinvey.Query();
        thirdQuery.equalTo('houseName', this.userData["household"]);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery));
    };
    TransactionsService.prototype.getAllUtilityBills = function () {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        var thirdQuery = new Kinvey.Query();
        var fourthQuery = new Kinvey.Query();
        query.equalTo('type', 'Utility Bill');
        secondQuery.equalTo('houseName', this.userData["household"]);
        thirdQuery.equalTo('complete', false);
        fourthQuery.equalTo('toPay', this.activeUser.username);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery).and(fourthQuery));
    };
    TransactionsService.prototype.getUtilityBillDue = function () {
        var now = new Date();
        var date = this.datePipe.transform(now, "yyyy-MM-dd");
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        var thirdQuery = new Kinvey.Query();
        var fourthQuery = new Kinvey.Query();
        var fifthQuery = new Kinvey.Query();
        query.equalTo('type', 'Utility Bill');
        secondQuery.equalTo('houseName', this.userData["household"]);
        thirdQuery.equalTo('complete', false);
        fourthQuery.equalTo('toPay', this.activeUser.username);
        fifthQuery.equalTo('date', date);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery).and(fourthQuery).and(fifthQuery));
    };
    TransactionsService.prototype.getUtilityBill = function () {
        var query = new Kinvey.Query();
        query.equalTo('type', 'Utility Bill');
        var secondQuery = new Kinvey.Query();
        secondQuery.equalTo('complete', true);
        var thirdQuery = new Kinvey.Query();
        thirdQuery.equalTo('houseName', this.userData["household"]);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery));
    };
    TransactionsService.prototype.getUtilityBillNotPaid = function () {
        var query = new Kinvey.Query();
        query.equalTo('type', 'Utility Bill');
        var secondQuery = new Kinvey.Query();
        secondQuery.equalTo('complete', false);
        return this.dataStore.find(query.and(secondQuery));
    };
    TransactionsService.prototype.getHouseShop = function () {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        var thirdQuery = new Kinvey.Query();
        var fourthQuery = new Kinvey.Query();
        var fifthQuery = new Kinvey.Query();
        query.equalTo('type', 'House Shop');
        secondQuery.equalTo('complete', false);
        thirdQuery.equalTo('bought', true);
        fourthQuery.equalTo('houseName', this.userData["household"]);
        fifthQuery.equalTo("toPay", this.activeUser.username);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery).and(fourthQuery).and(fifthQuery));
    };
    TransactionsService.prototype.getHouseShopPaid = function () {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        var thirdQuery = new Kinvey.Query();
        var fourthQuery = new Kinvey.Query();
        var fifthQuery = new Kinvey.Query();
        var sixthQuery = new Kinvey.Query();
        query.equalTo('type', 'House Shop');
        secondQuery.equalTo('complete', true);
        thirdQuery.equalTo('bought', true);
        fourthQuery.equalTo('houseName', this.userData["household"]);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery).and(fourthQuery));
    };
    TransactionsService.prototype.getHouseShopPaidName = function (itemName) {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        var thirdQuery = new Kinvey.Query();
        var fourthQuery = new Kinvey.Query();
        var fifthQuery = new Kinvey.Query();
        var sixthQuery = new Kinvey.Query();
        query.equalTo('type', 'House Shop');
        secondQuery.equalTo('complete', true);
        thirdQuery.equalTo('bought', true);
        fourthQuery.equalTo('houseName', this.userData["household"]);
        fifthQuery.equalTo('name', itemName);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery).and(fourthQuery).and(fifthQuery));
    };
    TransactionsService.prototype.getSuggestedItem = function () {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        var thirdQuery = new Kinvey.Query();
        var fourthQuery = new Kinvey.Query();
        var fifthQuery = new Kinvey.Query();
        query.equalTo('type', 'House Shop');
        secondQuery.equalTo('complete', false);
        thirdQuery.equalTo('bought', false);
        fourthQuery.equalTo('houseName', this.userData["household"]);
        fifthQuery.equalTo('toPay', this.activeUser.username);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery).and(fourthQuery));
    };
    TransactionsService.prototype.getHouseMembers = function () {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        var thirdQuery = new Kinvey.Query();
        query.equalTo('user', true);
        secondQuery.equalTo('houseName', this.userData["household"]);
        thirdQuery.notEqualTo('userName', this.activeUser.username);
        return this.dataStore.find(query.and(secondQuery).and(thirdQuery));
    };
    TransactionsService.prototype.getHouseMembersBill = function () {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        query.equalTo('user', true);
        secondQuery.equalTo('houseName', this.userData["household"]);
        return this.dataStore.find(query.and(secondQuery));
    };
    TransactionsService.prototype.getIcon = function () {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        query.equalTo('userName', this.activeUser.username);
        secondQuery.equalTo('houseName', this.userData["household"]);
        return this.dataStore.find(query.and(secondQuery));
    };
    TransactionsService.prototype.getUsersIcon = function () {
        var query = new Kinvey.Query();
        var secondQuery = new Kinvey.Query();
        query.notEqualTo('userName', this.activeUser.username);
        secondQuery.equalTo('houseName', this.userData["household"]);
        return this.dataStore.find(query.and(secondQuery));
    };
    TransactionsService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [common_1.DatePipe])
    ], TransactionsService);
    return TransactionsService;
}());
exports.TransactionsService = TransactionsService;
//# sourceMappingURL=data:application/json;base64,